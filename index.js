import{a as p,S as L,i as a}from"./assets/vendor-tnUJPedx.js";(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const m of s.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&i(m)}).observe(document,{childList:!0,subtree:!0});function o(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(r){if(r.ep)return;r.ep=!0;const s=o(r);fetch(r.href,s)}})();const b="48427757-fc949e79797ba7e940d238484",w="https://pixabay.com/api/",E=15,f=async(e,t)=>{const o={key:b,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:E,page:t},{data:i}=await p.get(w,{params:o});return i},S=e=>`
    <li class="gallery-item">
        <a href="${e.largeImageURL}">
        <img class="gallery-img" src="${e.webformatURL}" alt="${e.tags}" />
        </a>
        <div class="info">
        <p class="info-item"><b>Likes:</b> ${e.likes}</p>
        <p class="info-item"><b>Views:</b> ${e.views}</p>
        <p class="info-item"><b>Comments:</b> ${e.comments}</p>
        <p class="info-item"><b>Downloads:</b> ${e.downloads}</p>
        </div>
    </li>
    `,h=e=>{if(!e||e.length===0){console.error("No images to render");return}const t=document.querySelector(".js-gallery"),o=e.map(i=>S(i)).join("");t.insertAdjacentHTML("beforeend",o)},v=document.querySelector(".js-search-form"),g=document.querySelector(".js-gallery"),u=document.querySelector(".js-load-more-btn"),n=document.querySelector(".loader");let l=1,c="",d=0,y=new L(".js-gallery a");const P=async e=>{try{if(e.preventDefault(),c=e.currentTarget.elements.query.value.trim(),c===""){a.error({title:"Error",message:"Please enter a search term"});return}l=1,d=0,g.innerHTML="",u.classList.add("is-hidden"),n.classList.remove("is-hidden");const{hits:t,totalHits:o}=await f(c,l);if(t.length===0){a.info({title:"No results",message:"No images found. Please try again."}),n.classList.add("is-hidden");return}d=o,h(t,!0),d>t.length&&u.classList.remove("is-hidden"),y.refresh()}catch(t){a.error({title:"Error",message:"Something went wrong!"}),console.error(t)}finally{n.classList.add("is-hidden")}},q=()=>{var t;const e=((t=g.firstElementChild)==null?void 0:t.getBoundingClientRect().height)||0;window.scrollBy({top:e*2,behavior:"smooth"})},j=async()=>{try{l++,n.classList.remove("is-hidden");const{hits:e}=await f(c,l);e.length>0&&h(e,!1),y.refresh(),l*15>=d&&(u.classList.add("is-hidden"),a.info({title:"End of results",message:"We're sorry, but you've reached the end of search results."})),q()}catch(e){a.error({title:"Error",message:"Something went wrong!"}),console.error(e)}finally{n.classList.add("is-hidden")}};v.addEventListener("submit",P);u.addEventListener("click",j);
//# sourceMappingURL=index.js.map
